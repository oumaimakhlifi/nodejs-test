import type { EvaluationContext, FlagValueType, JsonValue, ResolutionReason } from '@openfeature/core';
/**
 * Internal flags configuration for DatadogProvider.
 */
export type FlagsConfiguration = {
    /** @internal */
    precomputed?: PrecomputedConfiguration;
};
/** @internal */
export type PrecomputedConfiguration = {
    response: PrecomputedConfigurationResponse;
    context?: EvaluationContext;
    fetchedAt?: UnixTimestamp;
};
/** @internal */
export type FlagTypeToValue<T extends FlagValueType> = {
    boolean: boolean;
    string: string;
    number: number;
    object: JsonValue;
}[T];
/** @internal
 * Timestamp in milliseconds since Unix Epoch.
 */
export type UnixTimestamp = number;
/** @internal */
export type PrecomputedConfigurationResponse = {
    data: {
        attributes: {
            /** When configuration was generated. */
            createdAt: string;
            flags: Record<string, PrecomputedFlag>;
        };
    };
};
/** @internal */
export type PrecomputedFlag<T extends FlagValueType = FlagValueType> = {
    allocationKey: string;
    variationKey: string;
    variationType: T;
    variationValue: FlagTypeToValue<T>;
    reason: ResolutionReason;
    doLog: boolean;
    extraLogging: Record<string, unknown>;
};
/** @internal */
export type PrecomputedFlagMetadata = {
    allocationKey: string;
    variationType: FlagValueType;
    doLog: boolean;
};
//# sourceMappingURL=configuration.d.ts.map