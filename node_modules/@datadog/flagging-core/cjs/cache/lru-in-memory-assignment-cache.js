"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LRUInMemoryAssignmentCache = void 0;
const abstract_assignment_cache_1 = require("./abstract-assignment-cache");
const lru_cache_1 = require("./lru-cache");
/**
 * A cache that uses the LRU algorithm to evict the least recently used items.
 *
 * It is used to limit the size of the cache.
 *
 * The primary use case is for server-side SDKs, where the cache is shared across
 * multiple users. In this case, the cache size should be set to the maximum number
 * of users that can be active at the same time.
 * @param {number} maxSize - Maximum cache size
 */
class LRUInMemoryAssignmentCache extends abstract_assignment_cache_1.AbstractAssignmentCache {
    constructor(maxSize) {
        super(new lru_cache_1.LRUCache(maxSize));
    }
}
exports.LRUInMemoryAssignmentCache = LRUInMemoryAssignmentCache;
//# sourceMappingURL=lru-in-memory-assignment-cache.js.map